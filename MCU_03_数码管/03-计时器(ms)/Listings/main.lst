C51 COMPILER V9.54   MAIN                                                                  10/16/2023 22:15:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Software\keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          
   3          */
   4          
   5          
   6          #include <REGX52.H>
   7          
   8          typedef unsigned char u8;
   9          typedef unsigned int u16;
  10          
  11          
  12          #define SMG_A_DP_PORT P0
  13          
  14          
  15          // 共阴数码管码表(共阳的按位取反即可),0~f外加'无显示'
  16          u8 gsmg_code[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  17                          0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x00};
  18          // dp段为 P0_7,(小数点)
  19                          
  20          void Delay(unsigned int t)  //@11.0592MHz 1ms
  21          {
  22   1        unsigned char data i, j;
  23   1        while(t>0){
  24   2          i = 11;
  25   2          j = 190;
  26   2          do
  27   2          {
  28   3            while (--j);
  29   3          } while (--i);
  30   2          t--;
  31   2        }
  32   1      }
  33          void Delay10us(unsigned int t)  //@11.0592MHz 1us
  34          {
  35   1        unsigned char data i;
  36   1        while(t>0){
  37   2          i = 25;
  38   2          while (--i);
  39   2          t--;
  40   2        }
  41   1      }
  42          
  43                          
  44          void setHour(u8 h);
  45          void setMinutes(u8 m);
  46          void setSeconds(u8 s);
  47          void main()
  48          {
  49   1        unsigned long time_stamp=0;
  50   1        u16 counts;
  51   1        
  52   1        
  53   1        while(1){
  54   2          // 循环(11*60+20)*100 落后10s(假设手机定时器为标准)
C51 COMPILER V9.54   MAIN                                                                  10/16/2023 22:15:45 PAGE 2   

  55   2          // counts=100;
  56   2          counts=98;
  57   2          
  58   2          // 1秒
  59   2          while(counts--){
  60   3            setHour(time_stamp/3600);
  61   3            setMinutes(time_stamp%3600/60);
  62   3            setSeconds(time_stamp%3600%60);
  63   3          
  64   3          }
  65   2          time_stamp++;
  66   2          
  67   2        }
  68   1      
  69   1      }
  70          
  71          
  72          void setHour(u8 h)
  73          {
  74   1        // 6号数码管
  75   1        P2_4=1;
  76   1        P2_3=1;
  77   1        P2_2=0;
  78   1        P0=gsmg_code[h/10];
  79   1        Delay10us(16);
  80   1        
  81   1        // 5号数码管
  82   1        P2_4=1;
  83   1        P2_3=0;
  84   1        P2_2=1;
  85   1        P0=gsmg_code[h%10];
  86   1        P0_7=1;
  87   1        Delay10us(16);
  88   1      }
  89          
  90          void setMinutes(u8 m)
  91          {
  92   1        // 4号数码管
  93   1        P2_4=1;
  94   1        P2_3=0;
  95   1        P2_2=0;
  96   1        P0=gsmg_code[m/10];
  97   1        Delay10us(16);
  98   1        
  99   1        // 3号数码管
 100   1        P2_4=0;
 101   1        P2_3=1;
 102   1        P2_2=1;
 103   1        P0=gsmg_code[m%10];
 104   1        P0_7=1;
 105   1        Delay10us(16);
 106   1      }
 107          
 108          void setSeconds(u8 s)
 109          {
 110   1        // 2号数码管
 111   1        P2_4=0;
 112   1        P2_3=1;
 113   1        P2_2=0;
 114   1        P0=gsmg_code[s/10];
 115   1        Delay10us(16);
 116   1        
C51 COMPILER V9.54   MAIN                                                                  10/16/2023 22:15:45 PAGE 3   

 117   1        // 1号数码管
 118   1        P2_4=0;
 119   1        P2_3=0;
 120   1        P2_2=1;
 121   1        P0=gsmg_code[s%10];
 122   1      //  P0_7=1;
 123   1        Delay10us(20);
 124   1        
 125   1      }
 126          
 127          
 128          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
